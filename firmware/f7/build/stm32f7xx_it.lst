ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f7xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f7xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB144:
   1:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f7xx_it.c **** /**
   3:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   5:Core/Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f7xx_it.c ****   * @attention
   8:Core/Src/stm32f7xx_it.c ****   *
   9:Core/Src/stm32f7xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32f7xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f7xx_it.c ****   *
  12:Core/Src/stm32f7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f7xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f7xx_it.c ****   *
  16:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f7xx_it.c ****   */
  18:Core/Src/stm32f7xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f7xx_it.c **** 
  20:Core/Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f7xx_it.c **** #include "main.h"
  22:Core/Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  23:Core/Src/stm32f7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f7xx_it.c **** #include "stdio.h"
  26:Core/Src/stm32f7xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f7xx_it.c **** 
  28:Core/Src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f7xx_it.c **** 
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 2


  31:Core/Src/stm32f7xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f7xx_it.c **** 
  33:Core/Src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f7xx_it.c **** 
  36:Core/Src/stm32f7xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f7xx_it.c **** 
  38:Core/Src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f7xx_it.c **** 
  41:Core/Src/stm32f7xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f7xx_it.c **** 
  43:Core/Src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f7xx_it.c **** 
  46:Core/Src/stm32f7xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f7xx_it.c **** 
  48:Core/Src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f7xx_it.c **** 
  51:Core/Src/stm32f7xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f7xx_it.c **** 
  53:Core/Src/stm32f7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f7xx_it.c **** 
  56:Core/Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f7xx_it.c **** 
  58:Core/Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_dcmi;
  60:Core/Src/stm32f7xx_it.c **** extern DCMI_HandleTypeDef hdcmi;
  61:Core/Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_sdmmc1;
  62:Core/Src/stm32f7xx_it.c **** extern SD_HandleTypeDef hsd1;
  63:Core/Src/stm32f7xx_it.c **** extern TIM_HandleTypeDef htim3;
  64:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32f7xx_it.c **** 
  66:Core/Src/stm32f7xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32f7xx_it.c **** 
  68:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f7xx_it.c **** /*           Cortex-M7 Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f7xx_it.c **** /**
  72:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32f7xx_it.c ****   */
  74:Core/Src/stm32f7xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32f7xx_it.c **** {
  29              		.loc 1 75 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  76:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f7xx_it.c **** 
  78:Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f7xx_it.c ****   while (1)
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 3


  36              		.loc 1 80 3 discriminator 1 view .LVU1
  81:Core/Src/stm32f7xx_it.c ****   {
  82:Core/Src/stm32f7xx_it.c ****   }
  37              		.loc 1 82 3 discriminator 1 view .LVU2
  80:Core/Src/stm32f7xx_it.c ****   {
  38              		.loc 1 80 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE144:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB145:
  83:Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f7xx_it.c **** }
  85:Core/Src/stm32f7xx_it.c **** 
  86:Core/Src/stm32f7xx_it.c **** /**
  87:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32f7xx_it.c ****   */
  89:Core/Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32f7xx_it.c **** {
  52              		.loc 1 90 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  91:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32f7xx_it.c **** 
  93:Core/Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32f7xx_it.c ****   while (1)
  59              		.loc 1 94 3 discriminator 1 view .LVU5
  95:Core/Src/stm32f7xx_it.c ****   {
  96:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f7xx_it.c ****   }
  60              		.loc 1 98 3 discriminator 1 view .LVU6
  94:Core/Src/stm32f7xx_it.c ****   {
  61              		.loc 1 94 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE145:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB146:
  99:Core/Src/stm32f7xx_it.c **** }
 100:Core/Src/stm32f7xx_it.c **** 
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 4


 101:Core/Src/stm32f7xx_it.c **** /**
 102:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Memory management fault.
 103:Core/Src/stm32f7xx_it.c ****   */
 104:Core/Src/stm32f7xx_it.c **** void MemManage_Handler(void)
 105:Core/Src/stm32f7xx_it.c **** {
  75              		.loc 1 105 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 106:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f7xx_it.c **** 
 108:Core/Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f7xx_it.c ****   while (1)
  82              		.loc 1 109 3 discriminator 1 view .LVU9
 110:Core/Src/stm32f7xx_it.c ****   {
 111:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f7xx_it.c ****   }
  83              		.loc 1 113 3 discriminator 1 view .LVU10
 109:Core/Src/stm32f7xx_it.c ****   {
  84              		.loc 1 109 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE146:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB147:
 114:Core/Src/stm32f7xx_it.c **** }
 115:Core/Src/stm32f7xx_it.c **** 
 116:Core/Src/stm32f7xx_it.c **** /**
 117:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 118:Core/Src/stm32f7xx_it.c ****   */
 119:Core/Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 120:Core/Src/stm32f7xx_it.c **** {
  98              		.loc 1 120 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 121:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Core/Src/stm32f7xx_it.c **** 
 123:Core/Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Core/Src/stm32f7xx_it.c ****   while (1)
 105              		.loc 1 124 3 discriminator 1 view .LVU13
 125:Core/Src/stm32f7xx_it.c ****   {
 126:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 5


 128:Core/Src/stm32f7xx_it.c ****   }
 106              		.loc 1 128 3 discriminator 1 view .LVU14
 124:Core/Src/stm32f7xx_it.c ****   {
 107              		.loc 1 124 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE147:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB148:
 129:Core/Src/stm32f7xx_it.c **** }
 130:Core/Src/stm32f7xx_it.c **** 
 131:Core/Src/stm32f7xx_it.c **** /**
 132:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Core/Src/stm32f7xx_it.c ****   */
 134:Core/Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 135:Core/Src/stm32f7xx_it.c **** {
 121              		.loc 1 135 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 136:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Core/Src/stm32f7xx_it.c **** 
 138:Core/Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Core/Src/stm32f7xx_it.c ****   while (1)
 128              		.loc 1 139 3 discriminator 1 view .LVU17
 140:Core/Src/stm32f7xx_it.c ****   {
 141:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f7xx_it.c ****   }
 129              		.loc 1 143 3 discriminator 1 view .LVU18
 139:Core/Src/stm32f7xx_it.c ****   {
 130              		.loc 1 139 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE148:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB149:
 144:Core/Src/stm32f7xx_it.c **** }
 145:Core/Src/stm32f7xx_it.c **** 
 146:Core/Src/stm32f7xx_it.c **** /**
 147:Core/Src/stm32f7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Core/Src/stm32f7xx_it.c ****   */
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 6


 149:Core/Src/stm32f7xx_it.c **** void SVC_Handler(void)
 150:Core/Src/stm32f7xx_it.c **** {
 144              		.loc 1 150 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 151:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Core/Src/stm32f7xx_it.c **** 
 153:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Core/Src/stm32f7xx_it.c **** 
 156:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Core/Src/stm32f7xx_it.c **** }
 149              		.loc 1 157 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE149:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB150:
 158:Core/Src/stm32f7xx_it.c **** 
 159:Core/Src/stm32f7xx_it.c **** /**
 160:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Debug monitor.
 161:Core/Src/stm32f7xx_it.c ****   */
 162:Core/Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 163:Core/Src/stm32f7xx_it.c **** {
 163              		.loc 1 163 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 164:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Core/Src/stm32f7xx_it.c **** 
 166:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Core/Src/stm32f7xx_it.c **** 
 169:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:Core/Src/stm32f7xx_it.c **** }
 168              		.loc 1 170 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE150:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB151:
 171:Core/Src/stm32f7xx_it.c **** 
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 7


 172:Core/Src/stm32f7xx_it.c **** /**
 173:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Pendable request for system service.
 174:Core/Src/stm32f7xx_it.c ****   */
 175:Core/Src/stm32f7xx_it.c **** void PendSV_Handler(void)
 176:Core/Src/stm32f7xx_it.c **** {
 182              		.loc 1 176 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 177:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Core/Src/stm32f7xx_it.c **** 
 179:Core/Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Core/Src/stm32f7xx_it.c **** 
 182:Core/Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Core/Src/stm32f7xx_it.c **** }
 187              		.loc 1 183 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE151:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB152:
 184:Core/Src/stm32f7xx_it.c **** 
 185:Core/Src/stm32f7xx_it.c **** /**
 186:Core/Src/stm32f7xx_it.c ****   * @brief This function handles System tick timer.
 187:Core/Src/stm32f7xx_it.c ****   */
 188:Core/Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 189:Core/Src/stm32f7xx_it.c **** {
 201              		.loc 1 189 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 190:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:Core/Src/stm32f7xx_it.c **** 
 192:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:Core/Src/stm32f7xx_it.c ****   HAL_IncTick();
 209              		.loc 1 193 3 view .LVU27
 210 0002 FFF7FEFF 		bl	HAL_IncTick
 211              	.LVL0:
 194:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Core/Src/stm32f7xx_it.c **** 
 196:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 197:Core/Src/stm32f7xx_it.c **** }
 212              		.loc 1 197 1 is_stmt 0 view .LVU28
 213 0006 08BD     		pop	{r3, pc}
 214              		.cfi_endproc
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 8


 215              	.LFE152:
 217              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 218              		.align	1
 219              		.global	TIM3_IRQHandler
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	TIM3_IRQHandler:
 225              	.LFB153:
 198:Core/Src/stm32f7xx_it.c **** 
 199:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 201:Core/Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Core/Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Core/Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 204:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 205:Core/Src/stm32f7xx_it.c **** 
 206:Core/Src/stm32f7xx_it.c **** /**
 207:Core/Src/stm32f7xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 208:Core/Src/stm32f7xx_it.c ****   */
 209:Core/Src/stm32f7xx_it.c **** void TIM3_IRQHandler(void)
 210:Core/Src/stm32f7xx_it.c **** {
 226              		.loc 1 210 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 211:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 212:Core/Src/stm32f7xx_it.c **** 
 213:Core/Src/stm32f7xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 214:Core/Src/stm32f7xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 234              		.loc 1 214 3 view .LVU30
 235 0002 0248     		ldr	r0, .L18
 236 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 237              	.LVL1:
 215:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 216:Core/Src/stm32f7xx_it.c ****   //printf("\nTIM3\n");
 217:Core/Src/stm32f7xx_it.c ****   //FPSCalculate();
 218:Core/Src/stm32f7xx_it.c **** 
 219:Core/Src/stm32f7xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 220:Core/Src/stm32f7xx_it.c **** }
 238              		.loc 1 220 1 is_stmt 0 view .LVU31
 239 0008 08BD     		pop	{r3, pc}
 240              	.L19:
 241 000a 00BF     		.align	2
 242              	.L18:
 243 000c 00000000 		.word	htim3
 244              		.cfi_endproc
 245              	.LFE153:
 247              		.section	.text.SDMMC1_IRQHandler,"ax",%progbits
 248              		.align	1
 249              		.global	SDMMC1_IRQHandler
 250              		.syntax unified
 251              		.thumb
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 9


 252              		.thumb_func
 254              	SDMMC1_IRQHandler:
 255              	.LFB154:
 221:Core/Src/stm32f7xx_it.c **** 
 222:Core/Src/stm32f7xx_it.c **** /**
 223:Core/Src/stm32f7xx_it.c ****   * @brief This function handles SDMMC1 global interrupt.
 224:Core/Src/stm32f7xx_it.c ****   */
 225:Core/Src/stm32f7xx_it.c **** void SDMMC1_IRQHandler(void)
 226:Core/Src/stm32f7xx_it.c **** {
 256              		.loc 1 226 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 227:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SDMMC1_IRQn 0 */
 228:Core/Src/stm32f7xx_it.c **** 
 229:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SDMMC1_IRQn 0 */
 230:Core/Src/stm32f7xx_it.c ****   HAL_SD_IRQHandler(&hsd1);
 264              		.loc 1 230 3 view .LVU33
 265 0002 0248     		ldr	r0, .L22
 266 0004 FFF7FEFF 		bl	HAL_SD_IRQHandler
 267              	.LVL2:
 231:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SDMMC1_IRQn 1 */
 232:Core/Src/stm32f7xx_it.c **** 
 233:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SDMMC1_IRQn 1 */
 234:Core/Src/stm32f7xx_it.c **** }
 268              		.loc 1 234 1 is_stmt 0 view .LVU34
 269 0008 08BD     		pop	{r3, pc}
 270              	.L23:
 271 000a 00BF     		.align	2
 272              	.L22:
 273 000c 00000000 		.word	hsd1
 274              		.cfi_endproc
 275              	.LFE154:
 277              		.section	.text.DMA2_Stream1_IRQHandler,"ax",%progbits
 278              		.align	1
 279              		.global	DMA2_Stream1_IRQHandler
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 284              	DMA2_Stream1_IRQHandler:
 285              	.LFB155:
 235:Core/Src/stm32f7xx_it.c **** 
 236:Core/Src/stm32f7xx_it.c **** /**
 237:Core/Src/stm32f7xx_it.c ****   * @brief This function handles DMA2 stream1 global interrupt.
 238:Core/Src/stm32f7xx_it.c ****   */
 239:Core/Src/stm32f7xx_it.c **** void DMA2_Stream1_IRQHandler(void)
 240:Core/Src/stm32f7xx_it.c **** {
 286              		.loc 1 240 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 10


 292              		.cfi_offset 3, -8
 293              		.cfi_offset 14, -4
 241:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */
 242:Core/Src/stm32f7xx_it.c **** 
 243:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 0 */
 244:Core/Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dcmi);
 294              		.loc 1 244 3 view .LVU36
 295 0002 0248     		ldr	r0, .L26
 296 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 297              	.LVL3:
 245:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 1 */
 246:Core/Src/stm32f7xx_it.c **** 
 247:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 1 */
 248:Core/Src/stm32f7xx_it.c **** }
 298              		.loc 1 248 1 is_stmt 0 view .LVU37
 299 0008 08BD     		pop	{r3, pc}
 300              	.L27:
 301 000a 00BF     		.align	2
 302              	.L26:
 303 000c 00000000 		.word	hdma_dcmi
 304              		.cfi_endproc
 305              	.LFE155:
 307              		.section	.text.DMA2_Stream3_IRQHandler,"ax",%progbits
 308              		.align	1
 309              		.global	DMA2_Stream3_IRQHandler
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 314              	DMA2_Stream3_IRQHandler:
 315              	.LFB156:
 249:Core/Src/stm32f7xx_it.c **** 
 250:Core/Src/stm32f7xx_it.c **** /**
 251:Core/Src/stm32f7xx_it.c ****   * @brief This function handles DMA2 stream3 global interrupt.
 252:Core/Src/stm32f7xx_it.c ****   */
 253:Core/Src/stm32f7xx_it.c **** void DMA2_Stream3_IRQHandler(void)
 254:Core/Src/stm32f7xx_it.c **** {
 316              		.loc 1 254 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 08B5     		push	{r3, lr}
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 3, -8
 323              		.cfi_offset 14, -4
 255:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */
 256:Core/Src/stm32f7xx_it.c **** 
 257:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 0 */
 258:Core/Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdmmc1);
 324              		.loc 1 258 3 view .LVU39
 325 0002 0248     		ldr	r0, .L30
 326 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 327              	.LVL4:
 259:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 1 */
 260:Core/Src/stm32f7xx_it.c **** 
 261:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 1 */
 262:Core/Src/stm32f7xx_it.c **** }
 328              		.loc 1 262 1 is_stmt 0 view .LVU40
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 11


 329 0008 08BD     		pop	{r3, pc}
 330              	.L31:
 331 000a 00BF     		.align	2
 332              	.L30:
 333 000c 00000000 		.word	hdma_sdmmc1
 334              		.cfi_endproc
 335              	.LFE156:
 337              		.section	.text.DCMI_IRQHandler,"ax",%progbits
 338              		.align	1
 339              		.global	DCMI_IRQHandler
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	DCMI_IRQHandler:
 345              	.LFB157:
 263:Core/Src/stm32f7xx_it.c **** 
 264:Core/Src/stm32f7xx_it.c **** /**
 265:Core/Src/stm32f7xx_it.c ****   * @brief This function handles DCMI global interrupt.
 266:Core/Src/stm32f7xx_it.c ****   */
 267:Core/Src/stm32f7xx_it.c **** void DCMI_IRQHandler(void)
 268:Core/Src/stm32f7xx_it.c **** {
 346              		.loc 1 268 1 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350 0000 08B5     		push	{r3, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 3, -8
 353              		.cfi_offset 14, -4
 269:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DCMI_IRQn 0 */
 270:Core/Src/stm32f7xx_it.c **** 
 271:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DCMI_IRQn 0 */
 272:Core/Src/stm32f7xx_it.c ****   HAL_DCMI_IRQHandler(&hdcmi);
 354              		.loc 1 272 3 view .LVU42
 355 0002 0248     		ldr	r0, .L34
 356 0004 FFF7FEFF 		bl	HAL_DCMI_IRQHandler
 357              	.LVL5:
 273:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DCMI_IRQn 1 */
 274:Core/Src/stm32f7xx_it.c **** 
 275:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DCMI_IRQn 1 */
 276:Core/Src/stm32f7xx_it.c **** }
 358              		.loc 1 276 1 is_stmt 0 view .LVU43
 359 0008 08BD     		pop	{r3, pc}
 360              	.L35:
 361 000a 00BF     		.align	2
 362              	.L34:
 363 000c 00000000 		.word	hdcmi
 364              		.cfi_endproc
 365              	.LFE157:
 367              		.text
 368              	.Letext0:
 369              		.file 2 "/Users/sol/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xpac
 370              		.file 3 "/Users/sol/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xpac
 371              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 372              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 373              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 374              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dcmi.h"
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 12


 375              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 376              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 377              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 378              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_it.c
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:21     .text.NMI_Handler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:27     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:44     .text.HardFault_Handler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:50     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:67     .text.MemManage_Handler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:73     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:90     .text.BusFault_Handler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:96     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:113    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:136    .text.SVC_Handler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:142    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:155    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:161    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:174    .text.PendSV_Handler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:180    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:193    .text.SysTick_Handler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:199    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:218    .text.TIM3_IRQHandler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:224    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:243    .text.TIM3_IRQHandler:000000000000000c $d
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:248    .text.SDMMC1_IRQHandler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:254    .text.SDMMC1_IRQHandler:0000000000000000 SDMMC1_IRQHandler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:273    .text.SDMMC1_IRQHandler:000000000000000c $d
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:278    .text.DMA2_Stream1_IRQHandler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:284    .text.DMA2_Stream1_IRQHandler:0000000000000000 DMA2_Stream1_IRQHandler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:303    .text.DMA2_Stream1_IRQHandler:000000000000000c $d
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:308    .text.DMA2_Stream3_IRQHandler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:314    .text.DMA2_Stream3_IRQHandler:0000000000000000 DMA2_Stream3_IRQHandler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:333    .text.DMA2_Stream3_IRQHandler:000000000000000c $d
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:338    .text.DCMI_IRQHandler:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:344    .text.DCMI_IRQHandler:0000000000000000 DCMI_IRQHandler
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccZysMm9.s:363    .text.DCMI_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_TIM_IRQHandler
htim3
HAL_SD_IRQHandler
hsd1
HAL_DMA_IRQHandler
hdma_dcmi
hdma_sdmmc1
HAL_DCMI_IRQHandler
hdcmi
