ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bsp_driver_sd.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "FATFS/Target/bsp_driver_sd.c"
  20              		.section	.text.BSP_SD_ITConfig,"ax",%progbits
  21              		.align	1
  22              		.weak	BSP_SD_ITConfig
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	BSP_SD_ITConfig:
  28              	.LFB142:
   1:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN Header */
   2:FATFS/Target/bsp_driver_sd.c **** /**
   3:FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
   4:FATFS/Target/bsp_driver_sd.c ****  * @file    bsp_driver_sd.c for F7 (based on stm32756g_eval_sd.c)
   5:FATFS/Target/bsp_driver_sd.c ****  * @brief   This file includes a generic uSD card driver.
   6:FATFS/Target/bsp_driver_sd.c ****  *          To be completed by the user according to the board used for the project.
   7:FATFS/Target/bsp_driver_sd.c ****  * @note    Some functions generated as weak: they can be overridden by
   8:FATFS/Target/bsp_driver_sd.c ****  *          - code in user files
   9:FATFS/Target/bsp_driver_sd.c ****  *          - or BSP code from the FW pack files
  10:FATFS/Target/bsp_driver_sd.c ****  *          if such files are added to the generated project (by the user).
  11:FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
  12:FATFS/Target/bsp_driver_sd.c ****   * @attention
  13:FATFS/Target/bsp_driver_sd.c ****   *
  14:FATFS/Target/bsp_driver_sd.c ****   * Copyright (c) 2023 STMicroelectronics.
  15:FATFS/Target/bsp_driver_sd.c ****   * All rights reserved.
  16:FATFS/Target/bsp_driver_sd.c ****   *
  17:FATFS/Target/bsp_driver_sd.c ****   * This software is licensed under terms that can be found in the LICENSE file
  18:FATFS/Target/bsp_driver_sd.c ****   * in the root directory of this software component.
  19:FATFS/Target/bsp_driver_sd.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:FATFS/Target/bsp_driver_sd.c ****   *
  21:FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
  22:FATFS/Target/bsp_driver_sd.c ****  */
  23:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END Header */
  24:FATFS/Target/bsp_driver_sd.c **** 
  25:FATFS/Target/bsp_driver_sd.c **** #ifdef OLD_API
  26:FATFS/Target/bsp_driver_sd.c **** /* kept to avoid issue when migrating old projects. */
  27:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN 0 */
  28:FATFS/Target/bsp_driver_sd.c **** 
  29:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END 0 */
  30:FATFS/Target/bsp_driver_sd.c **** #else
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 2


  31:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN FirstSection */
  32:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify / undefine following code or add new definitions */
  33:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END FirstSection */
  34:FATFS/Target/bsp_driver_sd.c **** /* Includes ------------------------------------------------------------------*/
  35:FATFS/Target/bsp_driver_sd.c **** #include "bsp_driver_sd.h"
  36:FATFS/Target/bsp_driver_sd.c **** 
  37:FATFS/Target/bsp_driver_sd.c **** /* Extern variables ---------------------------------------------------------*/
  38:FATFS/Target/bsp_driver_sd.c **** 
  39:FATFS/Target/bsp_driver_sd.c **** extern SD_HandleTypeDef hsd1;
  40:FATFS/Target/bsp_driver_sd.c **** 
  41:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeInitSection */
  42:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify / undefine following code or add code */
  43:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeInitSection */
  44:FATFS/Target/bsp_driver_sd.c **** /**
  45:FATFS/Target/bsp_driver_sd.c ****   * @brief  Initializes the SD card device.
  46:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
  47:FATFS/Target/bsp_driver_sd.c ****   */
  48:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_Init(void)
  49:FATFS/Target/bsp_driver_sd.c **** {
  50:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  51:FATFS/Target/bsp_driver_sd.c ****   /* Check if the SD card is plugged in the slot */
  52:FATFS/Target/bsp_driver_sd.c ****   if (BSP_SD_IsDetected() != SD_PRESENT)
  53:FATFS/Target/bsp_driver_sd.c ****   {
  54:FATFS/Target/bsp_driver_sd.c ****     return MSD_ERROR_SD_NOT_PRESENT;
  55:FATFS/Target/bsp_driver_sd.c ****   }
  56:FATFS/Target/bsp_driver_sd.c ****   /* HAL SD initialization */
  57:FATFS/Target/bsp_driver_sd.c ****   sd_state = HAL_SD_Init(&hsd1);
  58:FATFS/Target/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
  59:FATFS/Target/bsp_driver_sd.c ****   if (sd_state == MSD_OK)
  60:FATFS/Target/bsp_driver_sd.c ****   {
  61:FATFS/Target/bsp_driver_sd.c ****     /* Enable wide operation */
  62:FATFS/Target/bsp_driver_sd.c ****     if (HAL_SD_ConfigWideBusOperation(&hsd1, SDMMC_BUS_WIDE_4B) != HAL_OK)
  63:FATFS/Target/bsp_driver_sd.c ****     {
  64:FATFS/Target/bsp_driver_sd.c ****       sd_state = MSD_ERROR;
  65:FATFS/Target/bsp_driver_sd.c ****     }
  66:FATFS/Target/bsp_driver_sd.c ****   }
  67:FATFS/Target/bsp_driver_sd.c **** 
  68:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
  69:FATFS/Target/bsp_driver_sd.c **** }
  70:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
  71:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
  72:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END AfterInitSection */
  73:FATFS/Target/bsp_driver_sd.c **** 
  74:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN InterruptMode */
  75:FATFS/Target/bsp_driver_sd.c **** /**
  76:FATFS/Target/bsp_driver_sd.c ****   * @brief  Configures Interrupt mode for SD detection pin.
  77:FATFS/Target/bsp_driver_sd.c ****   * @retval Returns 0
  78:FATFS/Target/bsp_driver_sd.c ****   */
  79:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ITConfig(void)
  80:FATFS/Target/bsp_driver_sd.c **** {
  29              		.loc 1 80 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  81:FATFS/Target/bsp_driver_sd.c ****   /* Code to be updated by the user or replaced by one from the FW pack (in a stmxxxx_sd.c file) */
  82:FATFS/Target/bsp_driver_sd.c **** 
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 3


  83:FATFS/Target/bsp_driver_sd.c ****   return (uint8_t)0;
  34              		.loc 1 83 3 view .LVU1
  84:FATFS/Target/bsp_driver_sd.c **** }
  35              		.loc 1 84 1 is_stmt 0 view .LVU2
  36 0000 0020     		movs	r0, #0
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE142:
  41              		.section	.text.BSP_SD_ReadBlocks,"ax",%progbits
  42              		.align	1
  43              		.weak	BSP_SD_ReadBlocks
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	BSP_SD_ReadBlocks:
  49              	.LVL0:
  50              	.LFB143:
  85:FATFS/Target/bsp_driver_sd.c **** 
  86:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END InterruptMode */
  87:FATFS/Target/bsp_driver_sd.c **** 
  88:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeReadBlocksSection */
  89:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
  90:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeReadBlocksSection */
  91:FATFS/Target/bsp_driver_sd.c **** /**
  92:FATFS/Target/bsp_driver_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in polling mode.
  93:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
  94:FATFS/Target/bsp_driver_sd.c ****   * @param  ReadAddr: Address from where data is to be read
  95:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
  96:FATFS/Target/bsp_driver_sd.c ****   * @param  Timeout: Timeout for read operation
  97:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
  98:FATFS/Target/bsp_driver_sd.c ****   */
  99:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ReadBlocks(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks, uint32_t
 100:FATFS/Target/bsp_driver_sd.c **** {
  51              		.loc 1 100 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		.loc 1 100 1 is_stmt 0 view .LVU4
  56 0000 00B5     		push	{lr}
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 83B0     		sub	sp, sp, #12
  60              		.cfi_def_cfa_offset 16
 101:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  61              		.loc 1 101 3 is_stmt 1 view .LVU5
  62              	.LVL1:
 102:FATFS/Target/bsp_driver_sd.c **** 
 103:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_ReadBlocks(&hsd1, (uint8_t *)pData, ReadAddr, NumOfBlocks, Timeout) != HAL_OK)
  63              		.loc 1 103 3 view .LVU6
  64              		.loc 1 103 7 is_stmt 0 view .LVU7
  65 0004 0093     		str	r3, [sp]
  66 0006 1346     		mov	r3, r2
  67              	.LVL2:
  68              		.loc 1 103 7 view .LVU8
  69 0008 0A46     		mov	r2, r1
  70              	.LVL3:
  71              		.loc 1 103 7 view .LVU9
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 4


  72 000a 0146     		mov	r1, r0
  73              	.LVL4:
  74              		.loc 1 103 7 view .LVU10
  75 000c 0348     		ldr	r0, .L6
  76              	.LVL5:
  77              		.loc 1 103 7 view .LVU11
  78 000e FFF7FEFF 		bl	HAL_SD_ReadBlocks
  79              	.LVL6:
  80              		.loc 1 103 6 view .LVU12
  81 0012 00B1     		cbz	r0, .L3
 104:FATFS/Target/bsp_driver_sd.c ****   {
 105:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
  82              		.loc 1 105 14 view .LVU13
  83 0014 0120     		movs	r0, #1
  84              	.L3:
  85              	.LVL7:
 106:FATFS/Target/bsp_driver_sd.c ****   }
 107:FATFS/Target/bsp_driver_sd.c **** 
 108:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
  86              		.loc 1 108 3 is_stmt 1 view .LVU14
 109:FATFS/Target/bsp_driver_sd.c **** }
  87              		.loc 1 109 1 is_stmt 0 view .LVU15
  88 0016 03B0     		add	sp, sp, #12
  89              		.cfi_def_cfa_offset 4
  90              		@ sp needed
  91 0018 5DF804FB 		ldr	pc, [sp], #4
  92              	.L7:
  93              		.align	2
  94              	.L6:
  95 001c 00000000 		.word	hsd1
  96              		.cfi_endproc
  97              	.LFE143:
  99              		.section	.text.BSP_SD_WriteBlocks,"ax",%progbits
 100              		.align	1
 101              		.weak	BSP_SD_WriteBlocks
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	BSP_SD_WriteBlocks:
 107              	.LVL8:
 108              	.LFB144:
 110:FATFS/Target/bsp_driver_sd.c **** 
 111:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeWriteBlocksSection */
 112:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 113:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeWriteBlocksSection */
 114:FATFS/Target/bsp_driver_sd.c **** /**
 115:FATFS/Target/bsp_driver_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in polling mode.
 116:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 117:FATFS/Target/bsp_driver_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 118:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 119:FATFS/Target/bsp_driver_sd.c ****   * @param  Timeout: Timeout for write operation
 120:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 121:FATFS/Target/bsp_driver_sd.c ****   */
 122:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_WriteBlocks(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks, uint32
 123:FATFS/Target/bsp_driver_sd.c **** {
 109              		.loc 1 123 1 is_stmt 1 view -0
 110              		.cfi_startproc
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 5


 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		.loc 1 123 1 is_stmt 0 view .LVU17
 114 0000 00B5     		push	{lr}
 115              		.cfi_def_cfa_offset 4
 116              		.cfi_offset 14, -4
 117 0002 83B0     		sub	sp, sp, #12
 118              		.cfi_def_cfa_offset 16
 124:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 119              		.loc 1 124 3 is_stmt 1 view .LVU18
 120              	.LVL9:
 125:FATFS/Target/bsp_driver_sd.c **** 
 126:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_WriteBlocks(&hsd1, (uint8_t *)pData, WriteAddr, NumOfBlocks, Timeout) != HAL_OK)
 121              		.loc 1 126 3 view .LVU19
 122              		.loc 1 126 7 is_stmt 0 view .LVU20
 123 0004 0093     		str	r3, [sp]
 124 0006 1346     		mov	r3, r2
 125              	.LVL10:
 126              		.loc 1 126 7 view .LVU21
 127 0008 0A46     		mov	r2, r1
 128              	.LVL11:
 129              		.loc 1 126 7 view .LVU22
 130 000a 0146     		mov	r1, r0
 131              	.LVL12:
 132              		.loc 1 126 7 view .LVU23
 133 000c 0348     		ldr	r0, .L12
 134              	.LVL13:
 135              		.loc 1 126 7 view .LVU24
 136 000e FFF7FEFF 		bl	HAL_SD_WriteBlocks
 137              	.LVL14:
 138              		.loc 1 126 6 view .LVU25
 139 0012 00B1     		cbz	r0, .L9
 127:FATFS/Target/bsp_driver_sd.c ****   {
 128:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 140              		.loc 1 128 14 view .LVU26
 141 0014 0120     		movs	r0, #1
 142              	.L9:
 143              	.LVL15:
 129:FATFS/Target/bsp_driver_sd.c ****   }
 130:FATFS/Target/bsp_driver_sd.c **** 
 131:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 144              		.loc 1 131 3 is_stmt 1 view .LVU27
 132:FATFS/Target/bsp_driver_sd.c **** }
 145              		.loc 1 132 1 is_stmt 0 view .LVU28
 146 0016 03B0     		add	sp, sp, #12
 147              		.cfi_def_cfa_offset 4
 148              		@ sp needed
 149 0018 5DF804FB 		ldr	pc, [sp], #4
 150              	.L13:
 151              		.align	2
 152              	.L12:
 153 001c 00000000 		.word	hsd1
 154              		.cfi_endproc
 155              	.LFE144:
 157              		.section	.text.BSP_SD_ReadBlocks_DMA,"ax",%progbits
 158              		.align	1
 159              		.weak	BSP_SD_ReadBlocks_DMA
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 6


 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 164              	BSP_SD_ReadBlocks_DMA:
 165              	.LVL16:
 166              	.LFB145:
 133:FATFS/Target/bsp_driver_sd.c **** 
 134:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeReadDMABlocksSection */
 135:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 136:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeReadDMABlocksSection */
 137:FATFS/Target/bsp_driver_sd.c **** /**
 138:FATFS/Target/bsp_driver_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in DMA mode.
 139:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 140:FATFS/Target/bsp_driver_sd.c ****   * @param  ReadAddr: Address from where data is to be read
 141:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
 142:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 143:FATFS/Target/bsp_driver_sd.c ****   */
 144:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ReadBlocks_DMA(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks)
 145:FATFS/Target/bsp_driver_sd.c **** {
 167              		.loc 1 145 1 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		.loc 1 145 1 is_stmt 0 view .LVU30
 172 0000 08B5     		push	{r3, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
 176 0002 1346     		mov	r3, r2
 146:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 177              		.loc 1 146 3 is_stmt 1 view .LVU31
 178              	.LVL17:
 147:FATFS/Target/bsp_driver_sd.c **** 
 148:FATFS/Target/bsp_driver_sd.c ****   /* Read block(s) in DMA transfer mode */
 149:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_ReadBlocks_DMA(&hsd1, (uint8_t *)pData, ReadAddr, NumOfBlocks) != HAL_OK)
 179              		.loc 1 149 3 view .LVU32
 180              		.loc 1 149 7 is_stmt 0 view .LVU33
 181 0004 0A46     		mov	r2, r1
 182              	.LVL18:
 183              		.loc 1 149 7 view .LVU34
 184 0006 0146     		mov	r1, r0
 185              	.LVL19:
 186              		.loc 1 149 7 view .LVU35
 187 0008 0248     		ldr	r0, .L18
 188              	.LVL20:
 189              		.loc 1 149 7 view .LVU36
 190 000a FFF7FEFF 		bl	HAL_SD_ReadBlocks_DMA
 191              	.LVL21:
 192              		.loc 1 149 6 view .LVU37
 193 000e 00B1     		cbz	r0, .L15
 150:FATFS/Target/bsp_driver_sd.c ****   {
 151:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 194              		.loc 1 151 14 view .LVU38
 195 0010 0120     		movs	r0, #1
 196              	.L15:
 197              	.LVL22:
 152:FATFS/Target/bsp_driver_sd.c ****   }
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 7


 153:FATFS/Target/bsp_driver_sd.c **** 
 154:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 198              		.loc 1 154 3 is_stmt 1 view .LVU39
 155:FATFS/Target/bsp_driver_sd.c **** }
 199              		.loc 1 155 1 is_stmt 0 view .LVU40
 200 0012 08BD     		pop	{r3, pc}
 201              	.L19:
 202              		.align	2
 203              	.L18:
 204 0014 00000000 		.word	hsd1
 205              		.cfi_endproc
 206              	.LFE145:
 208              		.section	.text.BSP_SD_WriteBlocks_DMA,"ax",%progbits
 209              		.align	1
 210              		.weak	BSP_SD_WriteBlocks_DMA
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	BSP_SD_WriteBlocks_DMA:
 216              	.LVL23:
 217              	.LFB146:
 156:FATFS/Target/bsp_driver_sd.c **** 
 157:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeWriteDMABlocksSection */
 158:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 159:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeWriteDMABlocksSection */
 160:FATFS/Target/bsp_driver_sd.c **** /**
 161:FATFS/Target/bsp_driver_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in DMA mode.
 162:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 163:FATFS/Target/bsp_driver_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 164:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 165:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 166:FATFS/Target/bsp_driver_sd.c ****   */
 167:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_WriteBlocks_DMA(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks)
 168:FATFS/Target/bsp_driver_sd.c **** {
 218              		.loc 1 168 1 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		.loc 1 168 1 is_stmt 0 view .LVU42
 223 0000 08B5     		push	{r3, lr}
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 3, -8
 226              		.cfi_offset 14, -4
 227 0002 1346     		mov	r3, r2
 169:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 228              		.loc 1 169 3 is_stmt 1 view .LVU43
 229              	.LVL24:
 170:FATFS/Target/bsp_driver_sd.c **** 
 171:FATFS/Target/bsp_driver_sd.c ****   /* Write block(s) in DMA transfer mode */
 172:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_WriteBlocks_DMA(&hsd1, (uint8_t *)pData, WriteAddr, NumOfBlocks) != HAL_OK)
 230              		.loc 1 172 3 view .LVU44
 231              		.loc 1 172 7 is_stmt 0 view .LVU45
 232 0004 0A46     		mov	r2, r1
 233              	.LVL25:
 234              		.loc 1 172 7 view .LVU46
 235 0006 0146     		mov	r1, r0
 236              	.LVL26:
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 8


 237              		.loc 1 172 7 view .LVU47
 238 0008 0248     		ldr	r0, .L24
 239              	.LVL27:
 240              		.loc 1 172 7 view .LVU48
 241 000a FFF7FEFF 		bl	HAL_SD_WriteBlocks_DMA
 242              	.LVL28:
 243              		.loc 1 172 6 view .LVU49
 244 000e 00B1     		cbz	r0, .L21
 173:FATFS/Target/bsp_driver_sd.c ****   {
 174:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 245              		.loc 1 174 14 view .LVU50
 246 0010 0120     		movs	r0, #1
 247              	.L21:
 248              	.LVL29:
 175:FATFS/Target/bsp_driver_sd.c ****   }
 176:FATFS/Target/bsp_driver_sd.c **** 
 177:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 249              		.loc 1 177 3 is_stmt 1 view .LVU51
 178:FATFS/Target/bsp_driver_sd.c **** }
 250              		.loc 1 178 1 is_stmt 0 view .LVU52
 251 0012 08BD     		pop	{r3, pc}
 252              	.L25:
 253              		.align	2
 254              	.L24:
 255 0014 00000000 		.word	hsd1
 256              		.cfi_endproc
 257              	.LFE146:
 259              		.section	.text.BSP_SD_Erase,"ax",%progbits
 260              		.align	1
 261              		.weak	BSP_SD_Erase
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 266              	BSP_SD_Erase:
 267              	.LVL30:
 268              	.LFB147:
 179:FATFS/Target/bsp_driver_sd.c **** 
 180:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeEraseSection */
 181:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 182:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeEraseSection */
 183:FATFS/Target/bsp_driver_sd.c **** /**
 184:FATFS/Target/bsp_driver_sd.c ****   * @brief  Erases the specified memory area of the given SD card.
 185:FATFS/Target/bsp_driver_sd.c ****   * @param  StartAddr: Start byte address
 186:FATFS/Target/bsp_driver_sd.c ****   * @param  EndAddr: End byte address
 187:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 188:FATFS/Target/bsp_driver_sd.c ****   */
 189:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_Erase(uint32_t StartAddr, uint32_t EndAddr)
 190:FATFS/Target/bsp_driver_sd.c **** {
 269              		.loc 1 190 1 is_stmt 1 view -0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		.loc 1 190 1 is_stmt 0 view .LVU54
 274 0000 08B5     		push	{r3, lr}
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 3, -8
 277              		.cfi_offset 14, -4
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 9


 278 0002 0A46     		mov	r2, r1
 191:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 279              		.loc 1 191 3 is_stmt 1 view .LVU55
 280              	.LVL31:
 192:FATFS/Target/bsp_driver_sd.c **** 
 193:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_Erase(&hsd1, StartAddr, EndAddr) != HAL_OK)
 281              		.loc 1 193 3 view .LVU56
 282              		.loc 1 193 7 is_stmt 0 view .LVU57
 283 0004 0146     		mov	r1, r0
 284              	.LVL32:
 285              		.loc 1 193 7 view .LVU58
 286 0006 0348     		ldr	r0, .L30
 287              	.LVL33:
 288              		.loc 1 193 7 view .LVU59
 289 0008 FFF7FEFF 		bl	HAL_SD_Erase
 290              	.LVL34:
 291              		.loc 1 193 6 view .LVU60
 292 000c 00B1     		cbz	r0, .L27
 194:FATFS/Target/bsp_driver_sd.c ****   {
 195:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 293              		.loc 1 195 14 view .LVU61
 294 000e 0120     		movs	r0, #1
 295              	.L27:
 296              	.LVL35:
 196:FATFS/Target/bsp_driver_sd.c ****   }
 197:FATFS/Target/bsp_driver_sd.c **** 
 198:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 297              		.loc 1 198 3 is_stmt 1 view .LVU62
 199:FATFS/Target/bsp_driver_sd.c **** }
 298              		.loc 1 199 1 is_stmt 0 view .LVU63
 299 0010 08BD     		pop	{r3, pc}
 300              	.L31:
 301 0012 00BF     		.align	2
 302              	.L30:
 303 0014 00000000 		.word	hsd1
 304              		.cfi_endproc
 305              	.LFE147:
 307              		.section	.text.BSP_SD_GetCardState,"ax",%progbits
 308              		.align	1
 309              		.weak	BSP_SD_GetCardState
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 314              	BSP_SD_GetCardState:
 315              	.LFB148:
 200:FATFS/Target/bsp_driver_sd.c **** 
 201:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeGetCardStateSection */
 202:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 203:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeGetCardStateSection */
 204:FATFS/Target/bsp_driver_sd.c **** 
 205:FATFS/Target/bsp_driver_sd.c **** /**
 206:FATFS/Target/bsp_driver_sd.c ****   * @brief  Gets the current SD card data status.
 207:FATFS/Target/bsp_driver_sd.c ****   * @param  None
 208:FATFS/Target/bsp_driver_sd.c ****   * @retval Data transfer state.
 209:FATFS/Target/bsp_driver_sd.c ****   *          This value can be one of the following values:
 210:FATFS/Target/bsp_driver_sd.c ****   *            @arg  SD_TRANSFER_OK: No data transfer is acting
 211:FATFS/Target/bsp_driver_sd.c ****   *            @arg  SD_TRANSFER_BUSY: Data transfer is acting
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 10


 212:FATFS/Target/bsp_driver_sd.c ****   */
 213:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_GetCardState(void)
 214:FATFS/Target/bsp_driver_sd.c **** {
 316              		.loc 1 214 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 08B5     		push	{r3, lr}
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 3, -8
 323              		.cfi_offset 14, -4
 215:FATFS/Target/bsp_driver_sd.c ****   return ((HAL_SD_GetCardState(&hsd1) == HAL_SD_CARD_TRANSFER ) ? SD_TRANSFER_OK : SD_TRANSFER_BUSY
 324              		.loc 1 215 3 view .LVU65
 325              		.loc 1 215 12 is_stmt 0 view .LVU66
 326 0002 0348     		ldr	r0, .L34
 327 0004 FFF7FEFF 		bl	HAL_SD_GetCardState
 328              	.LVL36:
 216:FATFS/Target/bsp_driver_sd.c **** }
 329              		.loc 1 216 1 view .LVU67
 330 0008 0438     		subs	r0, r0, #4
 331 000a 18BF     		it	ne
 332 000c 0120     		movne	r0, #1
 333 000e 08BD     		pop	{r3, pc}
 334              	.L35:
 335              		.align	2
 336              	.L34:
 337 0010 00000000 		.word	hsd1
 338              		.cfi_endproc
 339              	.LFE148:
 341              		.section	.text.BSP_SD_GetCardInfo,"ax",%progbits
 342              		.align	1
 343              		.weak	BSP_SD_GetCardInfo
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 348              	BSP_SD_GetCardInfo:
 349              	.LVL37:
 350              	.LFB149:
 217:FATFS/Target/bsp_driver_sd.c **** 
 218:FATFS/Target/bsp_driver_sd.c **** /**
 219:FATFS/Target/bsp_driver_sd.c ****   * @brief  Get SD information about specific SD card.
 220:FATFS/Target/bsp_driver_sd.c ****   * @param  CardInfo: Pointer to HAL_SD_CardInfoTypedef structure
 221:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 222:FATFS/Target/bsp_driver_sd.c ****   */
 223:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_GetCardInfo(HAL_SD_CardInfoTypeDef *CardInfo)
 224:FATFS/Target/bsp_driver_sd.c **** {
 351              		.loc 1 224 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		.loc 1 224 1 is_stmt 0 view .LVU69
 356 0000 08B5     		push	{r3, lr}
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 3, -8
 359              		.cfi_offset 14, -4
 360 0002 0146     		mov	r1, r0
 225:FATFS/Target/bsp_driver_sd.c ****   /* Get SD card Information */
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 11


 226:FATFS/Target/bsp_driver_sd.c ****   HAL_SD_GetCardInfo(&hsd1, CardInfo);
 361              		.loc 1 226 3 is_stmt 1 view .LVU70
 362 0004 0148     		ldr	r0, .L38
 363              	.LVL38:
 364              		.loc 1 226 3 is_stmt 0 view .LVU71
 365 0006 FFF7FEFF 		bl	HAL_SD_GetCardInfo
 366              	.LVL39:
 227:FATFS/Target/bsp_driver_sd.c **** }
 367              		.loc 1 227 1 view .LVU72
 368 000a 08BD     		pop	{r3, pc}
 369              	.L39:
 370              		.align	2
 371              	.L38:
 372 000c 00000000 		.word	hsd1
 373              		.cfi_endproc
 374              	.LFE149:
 376              		.section	.text.BSP_SD_AbortCallback,"ax",%progbits
 377              		.align	1
 378              		.weak	BSP_SD_AbortCallback
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 383              	BSP_SD_AbortCallback:
 384              	.LFB153:
 228:FATFS/Target/bsp_driver_sd.c **** 
 229:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeCallBacksSection */
 230:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 231:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeCallBacksSection */
 232:FATFS/Target/bsp_driver_sd.c **** /**
 233:FATFS/Target/bsp_driver_sd.c ****   * @brief SD Abort callbacks
 234:FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 235:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 236:FATFS/Target/bsp_driver_sd.c ****   */
 237:FATFS/Target/bsp_driver_sd.c **** void HAL_SD_AbortCallback(SD_HandleTypeDef *hsd)
 238:FATFS/Target/bsp_driver_sd.c **** {
 239:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 240:FATFS/Target/bsp_driver_sd.c **** }
 241:FATFS/Target/bsp_driver_sd.c **** 
 242:FATFS/Target/bsp_driver_sd.c **** /**
 243:FATFS/Target/bsp_driver_sd.c ****   * @brief Tx Transfer completed callback
 244:FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 245:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 246:FATFS/Target/bsp_driver_sd.c ****   */
 247:FATFS/Target/bsp_driver_sd.c **** void HAL_SD_TxCpltCallback(SD_HandleTypeDef *hsd)
 248:FATFS/Target/bsp_driver_sd.c **** {
 249:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_WriteCpltCallback();
 250:FATFS/Target/bsp_driver_sd.c **** }
 251:FATFS/Target/bsp_driver_sd.c **** 
 252:FATFS/Target/bsp_driver_sd.c **** /**
 253:FATFS/Target/bsp_driver_sd.c ****   * @brief Rx Transfer completed callback
 254:FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 255:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 256:FATFS/Target/bsp_driver_sd.c ****   */
 257:FATFS/Target/bsp_driver_sd.c **** void HAL_SD_RxCpltCallback(SD_HandleTypeDef *hsd)
 258:FATFS/Target/bsp_driver_sd.c **** {
 259:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_ReadCpltCallback();
 260:FATFS/Target/bsp_driver_sd.c **** }
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 12


 261:FATFS/Target/bsp_driver_sd.c **** 
 262:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN CallBacksSection_C */
 263:FATFS/Target/bsp_driver_sd.c **** /**
 264:FATFS/Target/bsp_driver_sd.c ****   * @brief BSP SD Abort callback
 265:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 266:FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 267:FATFS/Target/bsp_driver_sd.c ****   */
 268:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_AbortCallback(void)
 269:FATFS/Target/bsp_driver_sd.c **** {
 385              		.loc 1 269 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 270:FATFS/Target/bsp_driver_sd.c **** 
 271:FATFS/Target/bsp_driver_sd.c **** }
 390              		.loc 1 271 1 view .LVU74
 391 0000 7047     		bx	lr
 392              		.cfi_endproc
 393              	.LFE153:
 395              		.section	.text.HAL_SD_AbortCallback,"ax",%progbits
 396              		.align	1
 397              		.global	HAL_SD_AbortCallback
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 402              	HAL_SD_AbortCallback:
 403              	.LVL40:
 404              	.LFB150:
 238:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 405              		.loc 1 238 1 view -0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 238:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 409              		.loc 1 238 1 is_stmt 0 view .LVU76
 410 0000 08B5     		push	{r3, lr}
 411              		.cfi_def_cfa_offset 8
 412              		.cfi_offset 3, -8
 413              		.cfi_offset 14, -4
 239:FATFS/Target/bsp_driver_sd.c **** }
 414              		.loc 1 239 3 is_stmt 1 view .LVU77
 415 0002 FFF7FEFF 		bl	BSP_SD_AbortCallback
 416              	.LVL41:
 240:FATFS/Target/bsp_driver_sd.c **** 
 417              		.loc 1 240 1 is_stmt 0 view .LVU78
 418 0006 08BD     		pop	{r3, pc}
 419              		.cfi_endproc
 420              	.LFE150:
 422              		.section	.text.BSP_SD_WriteCpltCallback,"ax",%progbits
 423              		.align	1
 424              		.weak	BSP_SD_WriteCpltCallback
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 429              	BSP_SD_WriteCpltCallback:
 430              	.LFB154:
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 13


 272:FATFS/Target/bsp_driver_sd.c **** 
 273:FATFS/Target/bsp_driver_sd.c **** /**
 274:FATFS/Target/bsp_driver_sd.c ****   * @brief BSP Tx Transfer completed callback
 275:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 276:FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 277:FATFS/Target/bsp_driver_sd.c ****   */
 278:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_WriteCpltCallback(void)
 279:FATFS/Target/bsp_driver_sd.c **** {
 431              		.loc 1 279 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 280:FATFS/Target/bsp_driver_sd.c **** 
 281:FATFS/Target/bsp_driver_sd.c **** }
 436              		.loc 1 281 1 view .LVU80
 437 0000 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE154:
 441              		.section	.text.HAL_SD_TxCpltCallback,"ax",%progbits
 442              		.align	1
 443              		.global	HAL_SD_TxCpltCallback
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	HAL_SD_TxCpltCallback:
 449              	.LVL42:
 450              	.LFB151:
 248:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_WriteCpltCallback();
 451              		.loc 1 248 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 248:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_WriteCpltCallback();
 455              		.loc 1 248 1 is_stmt 0 view .LVU82
 456 0000 08B5     		push	{r3, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 3, -8
 459              		.cfi_offset 14, -4
 249:FATFS/Target/bsp_driver_sd.c **** }
 460              		.loc 1 249 3 is_stmt 1 view .LVU83
 461 0002 FFF7FEFF 		bl	BSP_SD_WriteCpltCallback
 462              	.LVL43:
 250:FATFS/Target/bsp_driver_sd.c **** 
 463              		.loc 1 250 1 is_stmt 0 view .LVU84
 464 0006 08BD     		pop	{r3, pc}
 465              		.cfi_endproc
 466              	.LFE151:
 468              		.section	.text.BSP_SD_ReadCpltCallback,"ax",%progbits
 469              		.align	1
 470              		.weak	BSP_SD_ReadCpltCallback
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 475              	BSP_SD_ReadCpltCallback:
 476              	.LFB155:
 282:FATFS/Target/bsp_driver_sd.c **** 
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 14


 283:FATFS/Target/bsp_driver_sd.c **** /**
 284:FATFS/Target/bsp_driver_sd.c ****   * @brief BSP Rx Transfer completed callback
 285:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 286:FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 287:FATFS/Target/bsp_driver_sd.c ****   */
 288:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_ReadCpltCallback(void)
 289:FATFS/Target/bsp_driver_sd.c **** {
 477              		.loc 1 289 1 is_stmt 1 view -0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 290:FATFS/Target/bsp_driver_sd.c **** 
 291:FATFS/Target/bsp_driver_sd.c **** }
 482              		.loc 1 291 1 view .LVU86
 483 0000 7047     		bx	lr
 484              		.cfi_endproc
 485              	.LFE155:
 487              		.section	.text.HAL_SD_RxCpltCallback,"ax",%progbits
 488              		.align	1
 489              		.global	HAL_SD_RxCpltCallback
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 494              	HAL_SD_RxCpltCallback:
 495              	.LVL44:
 496              	.LFB152:
 258:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_ReadCpltCallback();
 497              		.loc 1 258 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 258:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_ReadCpltCallback();
 501              		.loc 1 258 1 is_stmt 0 view .LVU88
 502 0000 08B5     		push	{r3, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 3, -8
 505              		.cfi_offset 14, -4
 259:FATFS/Target/bsp_driver_sd.c **** }
 506              		.loc 1 259 3 is_stmt 1 view .LVU89
 507 0002 FFF7FEFF 		bl	BSP_SD_ReadCpltCallback
 508              	.LVL45:
 260:FATFS/Target/bsp_driver_sd.c **** 
 509              		.loc 1 260 1 is_stmt 0 view .LVU90
 510 0006 08BD     		pop	{r3, pc}
 511              		.cfi_endproc
 512              	.LFE152:
 514              		.section	.text.BSP_SD_IsDetected,"ax",%progbits
 515              		.align	1
 516              		.weak	BSP_SD_IsDetected
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 521              	BSP_SD_IsDetected:
 522              	.LFB156:
 292:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END CallBacksSection_C */
 293:FATFS/Target/bsp_driver_sd.c **** #endif
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 15


 294:FATFS/Target/bsp_driver_sd.c **** 
 295:FATFS/Target/bsp_driver_sd.c **** /**
 296:FATFS/Target/bsp_driver_sd.c ****  * @brief  Detects if SD card is correctly plugged in the memory slot or not.
 297:FATFS/Target/bsp_driver_sd.c ****  * @param  None
 298:FATFS/Target/bsp_driver_sd.c ****  * @retval Returns if SD is detected or not
 299:FATFS/Target/bsp_driver_sd.c ****  */
 300:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_IsDetected(void)
 301:FATFS/Target/bsp_driver_sd.c **** {
 523              		.loc 1 301 1 is_stmt 1 view -0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 8
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527 0000 00B5     		push	{lr}
 528              		.cfi_def_cfa_offset 4
 529              		.cfi_offset 14, -4
 530 0002 83B0     		sub	sp, sp, #12
 531              		.cfi_def_cfa_offset 16
 302:FATFS/Target/bsp_driver_sd.c ****   __IO uint8_t status = SD_PRESENT;
 532              		.loc 1 302 3 view .LVU92
 533              		.loc 1 302 16 is_stmt 0 view .LVU93
 534 0004 0123     		movs	r3, #1
 535 0006 8DF80730 		strb	r3, [sp, #7]
 303:FATFS/Target/bsp_driver_sd.c **** 
 304:FATFS/Target/bsp_driver_sd.c ****   if (BSP_PlatformIsDetected() == 0x0)
 536              		.loc 1 304 3 is_stmt 1 view .LVU94
 537              		.loc 1 304 7 is_stmt 0 view .LVU95
 538 000a FFF7FEFF 		bl	BSP_PlatformIsDetected
 539              	.LVL46:
 540              		.loc 1 304 6 view .LVU96
 541 000e 10B9     		cbnz	r0, .L50
 305:FATFS/Target/bsp_driver_sd.c ****   {
 306:FATFS/Target/bsp_driver_sd.c ****     status = SD_NOT_PRESENT;
 542              		.loc 1 306 5 is_stmt 1 view .LVU97
 543              		.loc 1 306 12 is_stmt 0 view .LVU98
 544 0010 0023     		movs	r3, #0
 545 0012 8DF80730 		strb	r3, [sp, #7]
 546              	.L50:
 307:FATFS/Target/bsp_driver_sd.c ****   }
 308:FATFS/Target/bsp_driver_sd.c **** 
 309:FATFS/Target/bsp_driver_sd.c ****   return status;
 547              		.loc 1 309 3 is_stmt 1 view .LVU99
 548              		.loc 1 309 10 is_stmt 0 view .LVU100
 549 0016 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 310:FATFS/Target/bsp_driver_sd.c **** }
 550              		.loc 1 310 1 view .LVU101
 551 001a 03B0     		add	sp, sp, #12
 552              		.cfi_def_cfa_offset 4
 553              		@ sp needed
 554 001c 5DF804FB 		ldr	pc, [sp], #4
 555              		.cfi_endproc
 556              	.LFE156:
 558              		.section	.text.BSP_SD_Init,"ax",%progbits
 559              		.align	1
 560              		.weak	BSP_SD_Init
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 16


 565              	BSP_SD_Init:
 566              	.LFB141:
  49:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 567              		.loc 1 49 1 is_stmt 1 view -0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571 0000 38B5     		push	{r3, r4, r5, lr}
 572              		.cfi_def_cfa_offset 16
 573              		.cfi_offset 3, -16
 574              		.cfi_offset 4, -12
 575              		.cfi_offset 5, -8
 576              		.cfi_offset 14, -4
  50:FATFS/Target/bsp_driver_sd.c ****   /* Check if the SD card is plugged in the slot */
 577              		.loc 1 50 3 view .LVU103
 578              	.LVL47:
  52:FATFS/Target/bsp_driver_sd.c ****   {
 579              		.loc 1 52 3 view .LVU104
  52:FATFS/Target/bsp_driver_sd.c ****   {
 580              		.loc 1 52 7 is_stmt 0 view .LVU105
 581 0002 FFF7FEFF 		bl	BSP_SD_IsDetected
 582              	.LVL48:
  52:FATFS/Target/bsp_driver_sd.c ****   {
 583              		.loc 1 52 6 view .LVU106
 584 0006 0128     		cmp	r0, #1
 585 0008 02D0     		beq	.L57
  54:FATFS/Target/bsp_driver_sd.c ****   }
 586              		.loc 1 54 12 view .LVU107
 587 000a 0225     		movs	r5, #2
 588              	.LVL49:
 589              	.L53:
  69:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
 590              		.loc 1 69 1 view .LVU108
 591 000c 2846     		mov	r0, r5
 592 000e 38BD     		pop	{r3, r4, r5, pc}
 593              	.LVL50:
 594              	.L57:
  69:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
 595              		.loc 1 69 1 view .LVU109
 596 0010 0446     		mov	r4, r0
  57:FATFS/Target/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
 597              		.loc 1 57 3 is_stmt 1 view .LVU110
  57:FATFS/Target/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
 598              		.loc 1 57 14 is_stmt 0 view .LVU111
 599 0012 0748     		ldr	r0, .L58
 600 0014 FFF7FEFF 		bl	HAL_SD_Init
 601              	.LVL51:
  59:FATFS/Target/bsp_driver_sd.c ****   {
 602              		.loc 1 59 3 is_stmt 1 view .LVU112
  59:FATFS/Target/bsp_driver_sd.c ****   {
 603              		.loc 1 59 6 is_stmt 0 view .LVU113
 604 0018 0546     		mov	r5, r0
 605 001a 0028     		cmp	r0, #0
 606 001c F6D1     		bne	.L53
  62:FATFS/Target/bsp_driver_sd.c ****     {
 607              		.loc 1 62 5 is_stmt 1 view .LVU114
  62:FATFS/Target/bsp_driver_sd.c ****     {
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 17


 608              		.loc 1 62 9 is_stmt 0 view .LVU115
 609 001e 4FF40061 		mov	r1, #2048
 610 0022 0348     		ldr	r0, .L58
 611              	.LVL52:
  62:FATFS/Target/bsp_driver_sd.c ****     {
 612              		.loc 1 62 9 view .LVU116
 613 0024 FFF7FEFF 		bl	HAL_SD_ConfigWideBusOperation
 614              	.LVL53:
  62:FATFS/Target/bsp_driver_sd.c ****     {
 615              		.loc 1 62 8 view .LVU117
 616 0028 0028     		cmp	r0, #0
 617 002a EFD0     		beq	.L53
  64:FATFS/Target/bsp_driver_sd.c ****     }
 618              		.loc 1 64 16 view .LVU118
 619 002c 2546     		mov	r5, r4
 620 002e EDE7     		b	.L53
 621              	.L59:
 622              		.align	2
 623              	.L58:
 624 0030 00000000 		.word	hsd1
 625              		.cfi_endproc
 626              	.LFE141:
 628              		.text
 629              	.Letext0:
 630              		.file 2 "/Users/sol/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xpac
 631              		.file 3 "/Users/sol/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xpac
 632              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 633              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 634              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 635              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 636              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 637              		.file 9 "FATFS/Target/fatfs_platform.h"
ARM GAS  /var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_driver_sd.c
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:21     .text.BSP_SD_ITConfig:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:27     .text.BSP_SD_ITConfig:0000000000000000 BSP_SD_ITConfig
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:42     .text.BSP_SD_ReadBlocks:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:48     .text.BSP_SD_ReadBlocks:0000000000000000 BSP_SD_ReadBlocks
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:95     .text.BSP_SD_ReadBlocks:000000000000001c $d
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:100    .text.BSP_SD_WriteBlocks:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:106    .text.BSP_SD_WriteBlocks:0000000000000000 BSP_SD_WriteBlocks
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:153    .text.BSP_SD_WriteBlocks:000000000000001c $d
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:158    .text.BSP_SD_ReadBlocks_DMA:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:164    .text.BSP_SD_ReadBlocks_DMA:0000000000000000 BSP_SD_ReadBlocks_DMA
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:204    .text.BSP_SD_ReadBlocks_DMA:0000000000000014 $d
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:209    .text.BSP_SD_WriteBlocks_DMA:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:215    .text.BSP_SD_WriteBlocks_DMA:0000000000000000 BSP_SD_WriteBlocks_DMA
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:255    .text.BSP_SD_WriteBlocks_DMA:0000000000000014 $d
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:260    .text.BSP_SD_Erase:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:266    .text.BSP_SD_Erase:0000000000000000 BSP_SD_Erase
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:303    .text.BSP_SD_Erase:0000000000000014 $d
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:308    .text.BSP_SD_GetCardState:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:314    .text.BSP_SD_GetCardState:0000000000000000 BSP_SD_GetCardState
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:337    .text.BSP_SD_GetCardState:0000000000000010 $d
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:342    .text.BSP_SD_GetCardInfo:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:348    .text.BSP_SD_GetCardInfo:0000000000000000 BSP_SD_GetCardInfo
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:372    .text.BSP_SD_GetCardInfo:000000000000000c $d
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:377    .text.BSP_SD_AbortCallback:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:383    .text.BSP_SD_AbortCallback:0000000000000000 BSP_SD_AbortCallback
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:396    .text.HAL_SD_AbortCallback:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:402    .text.HAL_SD_AbortCallback:0000000000000000 HAL_SD_AbortCallback
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:423    .text.BSP_SD_WriteCpltCallback:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:429    .text.BSP_SD_WriteCpltCallback:0000000000000000 BSP_SD_WriteCpltCallback
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:442    .text.HAL_SD_TxCpltCallback:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:448    .text.HAL_SD_TxCpltCallback:0000000000000000 HAL_SD_TxCpltCallback
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:469    .text.BSP_SD_ReadCpltCallback:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:475    .text.BSP_SD_ReadCpltCallback:0000000000000000 BSP_SD_ReadCpltCallback
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:488    .text.HAL_SD_RxCpltCallback:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:494    .text.HAL_SD_RxCpltCallback:0000000000000000 HAL_SD_RxCpltCallback
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:515    .text.BSP_SD_IsDetected:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:521    .text.BSP_SD_IsDetected:0000000000000000 BSP_SD_IsDetected
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:559    .text.BSP_SD_Init:0000000000000000 $t
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:565    .text.BSP_SD_Init:0000000000000000 BSP_SD_Init
/var/folders/fz/x0kldt2j7vs_j4slv3pyc44m0000gp/T//ccyjYhHy.s:624    .text.BSP_SD_Init:0000000000000030 $d

UNDEFINED SYMBOLS
HAL_SD_ReadBlocks
hsd1
HAL_SD_WriteBlocks
HAL_SD_ReadBlocks_DMA
HAL_SD_WriteBlocks_DMA
HAL_SD_Erase
HAL_SD_GetCardState
HAL_SD_GetCardInfo
BSP_PlatformIsDetected
HAL_SD_Init
HAL_SD_ConfigWideBusOperation
